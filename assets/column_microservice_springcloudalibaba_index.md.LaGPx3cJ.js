import{_ as t,c as e,o as a,a3 as o}from"./chunks/framework.pgMqRpUO.js";const m=JSON.parse('{"title":"Spring Cloud Alibaba","description":"","frontmatter":{},"headers":[],"relativePath":"column/microservice/springcloudalibaba/index.md","filePath":"column/microservice/springcloudalibaba/index.md"}'),d={name:"column/microservice/springcloudalibaba/index.md"},i=o('<h1 id="spring-cloud-alibaba" tabindex="-1">Spring Cloud Alibaba <a class="header-anchor" href="#spring-cloud-alibaba" aria-label="Permalink to &quot;Spring Cloud Alibaba&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Spring Cloud provides tools for developers to quickly build some of the common patterns in distributed systems. Spring Cloud Alibaba (<a href="https://sca.aliyun.com/en-us/" target="_blank" rel="noreferrer">https://sca.aliyun.com/en-us/</a>) provides a one-stop solution for distributed application development. It contains all the components required to develop distributed applications, making it easy for you to develop your applications using Spring Cloud. In this parts, I&#39;ll code to show hot to use the spring cloud alibaba to development a distribution system.</p><h2 id="version-notes" tabindex="-1">Version Notes <a class="header-anchor" href="#version-notes" aria-label="Permalink to &quot;Version Notes&quot;">​</a></h2><p>you can find the spring boot , springcloud, spring cloud alibaba version from the url <a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E" target="_blank" rel="noreferrer">https://github.com/alibaba/spring-cloud-alibaba/wiki/版本说明</a></p><p>In the tutorial, I choose version:</p><table tabindex="0"><thead><tr><th>Spring Cloud Alibaba Version</th><th>Spring Cloud Version</th><th>Spring Boot Version</th></tr></thead><tbody><tr><td>2021.0.1.0</td><td>Spring Cloud 2021.0.1</td><td>2.6.3</td></tr></tbody></table><h2 id="component-selection" tabindex="-1">Component Selection <a class="header-anchor" href="#component-selection" aria-label="Permalink to &quot;Component Selection&quot;">​</a></h2><table tabindex="0"><thead><tr><th>functional</th><th>component</th><th>version</th><th>remark</th></tr></thead><tbody><tr><td>Register Center</td><td>Nacos Discovery</td><td>1.4.2</td><td></td></tr><tr><td>Conifg Center</td><td>Nacos Config</td><td>1.4.2</td><td></td></tr><tr><td>Remote Call</td><td>OpenFeign</td><td></td><td></td></tr><tr><td>gateway</td><td>SpringCloudGateway</td><td></td><td></td></tr><tr><td>Load balancing</td><td>Ribbon</td><td></td><td></td></tr><tr><td>Message Middleware</td><td>RocketMq</td><td>4.9.2</td><td></td></tr><tr><td>Distributed Transactions</td><td>seata</td><td>1.4.2</td><td></td></tr><tr><td>Service flow control and fault tolerance</td><td>Sentinel</td><td>1.8.3</td><td></td></tr></tbody></table>',9),r=[i];function n(l,s,c,p,b,h){return a(),e("div",null,r)}const g=t(d,[["render",n]]);export{m as __pageData,g as default};
