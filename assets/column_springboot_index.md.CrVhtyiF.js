import{_ as e,c as t,o,a3 as r}from"./chunks/framework.pgMqRpUO.js";const d=JSON.parse('{"title":"spring boot experience","description":"","frontmatter":{},"headers":[],"relativePath":"column/springboot/index.md","filePath":"column/springboot/index.md"}'),i={name:"column/springboot/index.md"},n=r('<h1 id="spring-boot-experience" tabindex="-1">spring boot experience <a class="header-anchor" href="#spring-boot-experience" aria-label="Permalink to &quot;spring boot experience&quot;">​</a></h1><p>In this parts,I will introduce various techniques for integrating Spring Boot with different technologies. Additionally, I will cover some usage methods based on Spring extensions.</p><p><a href="./001_spring_boot_test_example.html">SpringBoot Test 的使用</a></p><p><a href="./002_spring_boot_with_mybatis_plus.html">SpringBoot 整合 MyBatis-Plus</a></p><p><a href="./003_spring_boot_with_redis.html">SpringBoot 整合 Redis</a></p><p><a href="./004_mybatis_plus_generator.html">Mybatis-Plus 代码生成器</a></p><p><a href="./005_spring_boot_freemarker_html_to_pdf.html">SpringBoot 通过 Freemarker 把 Html 转为 Pdf</a></p><p><a href="./006_spring_transaction.html">Spring 事务传播行为</a></p><p><a href="./008_springboot_transaction_error.html">SpringBoot 事务失效的场景</a></p><p><a href="./007_springboot_mongodb.html">SpringBoot 整合 MongoDB</a></p><p><a href="./009_springboot_custom_validation.html">SpringBoot 基于 valid 自定义验证注解</a></p><p><a href="./010_springboot_properties.html">SpringBoot 配置文件</a></p><p><a href="./011_spring_plugin.html">基于 spring-plugin 插件化开发</a></p>',13),p=[n];function a(s,_,l,h,g,c){return o(),t("div",null,p)}const f=e(i,[["render",a]]);export{d as __pageData,f as default};
