import{_ as e,c as t,o as a,a3 as p}from"./chunks/framework.pgMqRpUO.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"column/java-design-patterns/index.md","filePath":"column/java-design-patterns/index.md"}'),r={name:"column/java-design-patterns/index.md"},n=p('<h2 id="首页导航" tabindex="-1">首页导航 <a class="header-anchor" href="#首页导航" aria-label="Permalink to &quot;首页导航&quot;">​</a></h2><p>场景驱动设计模式案例</p><p><a href="./001_project_init.html">开篇：项目初始化</a></p><p><a href="./002_adapter.html">适配器模式支持第三方登录</a></p><p><a href="./003_compose.html">组合模式构建商品类目</a></p><p><a href="./004_bridge_pattern.html">桥接模式实现不通维度短信发送</a></p><p><a href="./005_template_pattern.html">工厂模式结合模板设计模式实现文件元数据解析</a></p><p><a href="./006_visitor_pattern.html">访问者设计模式</a></p><p><a href="./007_memento_pattern.html">备忘录设计模式备份诊断模板</a></p><p><a href="./008_Interpreter_design_pattern.html">解释器设计模式在自定义告警规则的应用</a></p><p><a href="./009_flyweight_pattern.html">享元设计模式复用设备厂商对象</a></p><p><a href="./010_proxy_pattern.html">代理模式对服务进行扩展</a></p><p><a href="./011_pipeline_design.html">Pipeline 管道模式</a></p>',13),_=[n];function i(o,h,s,l,m,d){return a(),t("div",null,_)}const u=e(r,[["render",i]]);export{f as __pageData,u as default};
